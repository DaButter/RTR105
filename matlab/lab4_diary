>> %% 4.laboratorijas darbs
>> %% Daudzkonturu shemas simulacija
>> % Dots :
>> R1=1; R2=2; R3=3; R4=4; R5=5; R6=6; R7=7;
>> E1=1; E2=2; E3=3;
>> % E - sprieguma avoti
>> R = [R1+R2+R3,-R2,0;-R2 , R2+R4+R5, -R5; 0, -R5, R5+R6+R7]

R =

     6    -2     0
    -2    11    -5
     0    -5    18

>> E = [E1 -E2 -E3]'

E =

     1
    -2
    -3

>> % Matricu vienadojums R * Ik = E ---> Ik = R\E
>> % atrisinat var ar Gausa izslegsanas metodi
>> % kas ir "\" operacija
>> Ik = R\E

Ik =

    0.0735
   -0.2795
   -0.2443

>> % esam atradusi 3 konturstravas
>> % Ik1 Ik2 Ik3 ir Ik matricaa
>> % piem.: ir jaatrod UR2 - ?
>> % ir jaatrod PR2 - ?
>> IR2 = Ik(1)-Ik(2)

IR2 =

    0.3530

>> UR2 = IR2*R2

UR2 =

    0.7060

>> PR2 = IR2*UR2

PR2 =

    0.2492

>> % PR2 --> uz otru rezistoru (R2) darbojosa jauda
>> % Pienemsim ka E1,E2,E3 vertibas ir citas
>> % bus 3 laika momenti, katraa Ei bus
>> % tris vertibas
>> E1=[1 -1 0];
>> E2=[2 -2 0];
>> E3=[3 -3 0];
>> E=[E1;-E2;-E3]

E =

     1    -1     0
    -2     2     0
    -3     3     0

>> % atkal rekinasim vienadojumu sistemu
>> Ik = R\E

Ik =

    0.0735   -0.0735         0
   -0.2795    0.2795         0
   -0.2443    0.2443         0

>> % 1.konturstrava ir 1.rindaa
>> % ir jaatrod IR3,UR3,PR3
>> IR3 = IK(1,:)
Undefined function or variable 'IK'.
 
Did you mean:
>> IR3 = IK(1,:)
Undefined function or variable 'IK'.
 
Did you mean:
>> IR3 = Ik(1,:)

IR3 =

    0.0735   -0.0735         0

>> UR3 = IR3*R3

UR3 =

    0.2205   -0.2205         0

>> PR3 =IR3.*UR3 

PR3 =

    0.0162    0.0162         0

>> % punktveida reizinajums, lai reizina elementu ar elementu matricaa
>> % vel viens piemers
>> % laika mainigie signali
>> t = 0:0.01:1;
>> E1 = sin(2*pi*5*t);
>> % E2 = 2 konstante. Ka pareizi pierakstit konstanti matlabaa?
>> % lai butu tik pat daudz 2 constansu E2, cik t elementu
>> E2 = 2+zeros(size(t));
>> E3 = 0.5*cos(2*pi*7*t);
>> E = [E1;-E2;-E3];
>> % rekinasim 101 vienadojumu sistemu
>> Ik = R\E; % ieliek semikalonu, jo daudz atbilzu
>> % Bus jauzzime UR5, PR5
>> IR5 = Ik(3,:)-Ik(2,:);
>> UR5 = IR5*R5;
>> PR5 = IR5.*UR5;
>> % uzzimesim :
>> plot(t,UR5,t,PR5);
>> legend(UR5, Spriegums)
>> plot(t,UR5,t,PR5);
>> legend('U_{R5}(t)','P_{R5}(t)')
>> xlabel('t,s')
>> grid
>> % ka uzzimet 2 dazadus grafikus
>> % lai butu 2 neatkarigas y asis
>> plotyy(t,UR5,t,PR5)
>> h = plotyy(t,UR5,t,PR5)

h = 

  1Ã—2 Axes array:

    Axes    Axes

>> ylabel(h(1),'spriegums, V')
>> ylabel(h(2),'jauda, W')
>> legend('UR5(t)','PR5(t)')
>> xlabel('t,s')
>> grid
>> % velviens variants, ka to izdarit
>> figure(2)
>> yyaxis left
>> plot(t,UR5)
>> ylabel('spiegums, V')
>> xlabel('t,s')
>> yyaxis right
>> 
>> plot(t,PR5)
>> ylabel('Jauda,W')
>> legend('U_{R5}(t)','P_{R5}(t)')
>> grid
>> grid off
>> % ka parbaudit rezultatus?
>> % lai parbauditu rezultatus
>> % ja aprekins bija veikts ar KSM
>> % parbauda ar Kirhova sprieguma likumu (KSpL)
>> % Kirhofa**
>> % izmanto visiem konturiem parbaudi
>> % ja aprekins tika veikts ar MSM - parbauda Kirhofa stravas likumu
>> % (KSpL)
>> % parbauda visiem mezgliem
>> 
>> 
>> %Parbaudisim KSpL 3.konturam
>> % UR5+UR6+UR7 == -E3 
>> % parvietosim visu uz vienu pusi
>> % UR5+UR6+UR7+E3==0
>> %pieskirsim kreiso pusi mainigajam Utst
>> % Utst = UR5+UR5+UR7+E3;
>> % uzzimesim, butu jabut "0"
>> UR6 = Ik(3,:)*R6;
>> UR7 = Ik(3,:)*R7;
>> Utst = UR5+UR6+UR7+E3;
>> figure(3),plot(t,Utst),title('parbaude')
>> grid
